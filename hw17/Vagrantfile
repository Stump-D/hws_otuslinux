# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        :box_name => "centos/7",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},                   
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 4, auto_config: false, virtualbox__intnet: "virtual-switch"},
                ]
  },
  
  :testServer1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "virtual-switch"},
                ]
  },
  :testClient1 => {
      :box_name => "centos/7",
      :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "virtual-switch"},
              ]
   },
  :testServer2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "virtual-switch"},
                ]
  },
  :testClient2 => {
      :box_name => "centos/7",
      :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "virtual-switch"},
              ]
   },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
  
#    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s
        

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
          yum install -y teamd tcpdump
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            set -x
            echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
            sysctl -p
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            echo "10.10.10.0/24 via 192.168.255.2" >> /etc/sysconfig/network-scripts/route-eth1
            #echo "ARPCHECK=no" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            /etc/init.d/network restart
            SHELL
        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            set -x
            echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
            sysctl -p
            #echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            #echo "DEFROUTE=yes" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            #echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            /etc/init.d/network restart
            SHELL
            
        end
      end

  end
  
  
end

