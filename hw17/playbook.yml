---
- name:  install needed network manager libs
  hosts: all
  become: yes
  tasks:
    - name: install needed network manager libs
      package:
        name:
          - NetworkManager-glib
          - nm-connection-editor
          - libsemanage-python
          - policycoreutils-python
        state: present

- name:  Isolated Config| testClients & testServers Network Configuration
  hosts: Isolated
  become: yes
  tasks:
    - name: Try to set vlan&ip 
      shell:
        nmcli con add type vlan con-name "{{  vlan_name  }}"  dev eth1 id "{{  vlan_id  }}" ip4 "{{  ip4addr  }}"     
      tags:
        - set-client-vlan-ip
      notify:
        - reload network interface
        - restart NetworkManager

  handlers:
    - include: handlers/reload_network_interface.yml
    - include: handlers/restart_network_manager.yml
    - include: handlers/restart_network.yml
    
- name:  centralRouter Config
  hosts: centralRouter
  become: yes
  vars:
    vlans:
      - vlan_name: vlan100
        ifname: eth3
        vlan_id: 100
      - vlan_name: vlan101
        ifname: eth3
        vlan_id: 101
  tasks:
    - name: Try to set vlan centralRouter
      shell:
        nmcli con add type vlan con-name "{{ item.vlan_name }}"  dev "{{ item.ifname }}"  id "{{ item.vlan_id }}"      
      tags:
        - set-centralRouter-vlan
      with_items:
        - '{{ vlans }}'
        
      notify:
        - reload network interface
        - restart NetworkManager

  handlers:
    - include: handlers/reload_network_interface.yml
    - include: handlers/restart_network_manager.yml
    - include: handlers/restart_network.yml

      
- name:  Routers Config| Routers Network Configuration
  hosts: Routers
  become: yes
  vars:
    team_name: Team0
    nmcli_bond:
      - conn_name: "{{ team_name }}"
        ip4: "{{ ip4addr }}"
        mode: balance-rr
    nmcli_bond_slave:
      - conn_name: Team-Port0
        ifname: eth1
        master: "{{ team_name }}"
      - conn_name: Team-Port1
        ifname: eth2
        master: "{{ team_name }}"
  tasks:
    - name: Try nmcli add bond - conn_name only & ip4 gw4 mode
      nmcli:
        type: bond
        conn_name: '{{ item.conn_name }}'
        ip4: '{{ item.ip4 }}'
        mode: '{{ item.mode }}'
        state: present
      with_items:
        - '{{ nmcli_bond }}'

    - name: Try nmcli add bond-slave
      nmcli:
        type: bond-slave
        conn_name: '{{ item.conn_name }}'
        ifname: '{{ item.ifname }}'
        master: '{{ item.master }}'
        state: present
      with_items:
        - '{{ nmcli_bond_slave }}'

      notify:
        - reload network interface
        - restart NetworkManager

  handlers:
    - include: handlers/reload_network_interface.yml
    - include: handlers/restart_network_manager.yml
    - include: handlers/restart_network.yml
